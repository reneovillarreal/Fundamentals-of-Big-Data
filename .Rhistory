group_by(MONTH, YEAR) %>%
summarize(meanT = mean(meanT))
q8_data
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanT = mean(meanT))
q8_data
q8TS <- ts(q8_data, frequency = 12)
q8Decomp <- decompose(q8TS)
plot(q8Decomp)
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) #%>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
summarize(meanT = mean(meanT))
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) #%>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
q8_data
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE)
q8_data
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE)
as.xts(x = q8_data[,-1], order_by = q8_data$DATE)
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE)
as.xts(x = q8_data, order_by = q8_data$DATE)
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE)
str(q8_data)
as.xts(x = q8_data, order_by = q8_data$DATE)
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE)
str(q8_data)
```{r}
q8_data <- data.frame(data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE))
str(q8_data)
q8_data <- data.frame(data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE))
str(q8_data)
as.xts(x = q8_data, order_by = q8_data$DATE)
q8_data <- data.frame(data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE))
str(q8_data)
as.xts(x = q8_data, order_by = q8_data$as.Date(DATE))
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE)
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
# mutate(MONTH = month(DATE, label = TRUE),
#YEAR = year(DATE)) %>%
# group_by(MONTH, YEAR) %>%
# summarize(meanT = mean(meanT))
arrange(DATE)
q8_data
q8_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(TEMP_AVG), TEMP_AVG > 0) %>%
select(DATE, TEMP_AVG) %>%
group_by(DATE) %>%
summarize(meanT = mean(TEMP_AVG)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanT = mean(meanT)) %>%
arrange(YEAR, MONTH)
q8_data
q8TS <- ts(q8_data, frequency = 12)
q8Decomp <- decompose(q8TS)
plot(q8Decomp)
q8TS <- ts(q8_data, start = c(1992, 3), end = c(2020, 9), frequency = 12)
q8Decomp <- decompose(q8TS)
plot(q8Decomp)
q8TS <- ts(q8_data$meanT, start = c(1992, 3), end = c(2020, 9), frequency = 12)
q8Decomp <- decompose(q8TS)
plot(q8Decomp)
arimaModel <- auto.arima(q8_data$TEMP_AVG)
arimaModel <- auto.arima(q8_data$meanT)
arimaFcst <- forecast(arimaModel, h = 36)
view(arimaFcst)
arimaModel <- auto.arima(q8TS)
arimaFcst <- forecast(arimaModel, h = 36)
view(arimaFcst)
arimaModel <- auto.arima(q8TS)
arimaModel <- auto.arima(q8TS)
arimaFcst <- forecast(arimaModel, h = 36)
arimaFcst
plot(arimaFcst)
q8_data %>%
filter(MONTH == "July", YEAR == 2020)
q8_data %>%
filter(MONTH == "July", YEAR == 2020) %>%
select(meanT)
q8_data %>%
filter(MONTH == "Jul", YEAR == 2020) %>%
select(meanT)
q9_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(RAIN), RAIN > 0) %>%
select(DATE, RAIN) %>%
group_by(DATE) %>%
summarize(meanT = mean(RAIN)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanR = mean(meanR)) %>%
arrange(YEAR, MONTH)
q9_data <- data_final %>%
filter(COUNTY == "Miami Dade", !is.na(RAIN), RAIN > 0) %>%
select(DATE, RAIN) %>%
group_by(DATE) %>%
summarize(meanR = mean(RAIN)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanR = mean(meanR)) %>%
arrange(YEAR, MONTH)
q9_data
q9_data <- data_final %>%
filter(STATE == "Florida", !is.na(RAIN), RAIN > 0) %>%
select(DATE, RAIN) %>%
group_by(DATE) %>%
summarize(meanR = mean(RAIN)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanR = mean(meanR)) %>%
arrange(YEAR, MONTH)
q9_data
q9_data <- data_final %>%
filter(STATE == "Florida", !is.na(RAIN), RAIN > 0) %>%
select(DATE, RAIN) %>%
group_by(DATE) %>%
summarize(sumR = sum(RAIN)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(sumR = sum(sumR)) %>%
arrange(YEAR, MONTH)
q9_data
q9TS <- ts(q9_data$sumR, start = c(1980, 1), end = c(2020, 9), frequency = 12)
q9Decomp <- decompose(q9TS)
plot(q9Decomp)
arimaModel <- auto.arima(q9TS)
arimaFcst <- forecast(arimaModel, h = 12)
arimaFcst
q9_data <- data_final %>%
filter(STATE == "Florida", !is.na(RAIN), RAIN > 0) %>%
select(DATE, RAIN) %>%
group_by(DATE) %>%
summarize(meanR = mean(RAIN)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanR = mean(meanR)) %>%
arrange(YEAR, MONTH)
q9_data
q9TS <- ts(q9_data$sumR, start = c(1980, 1), end = c(2020, 9), frequency = 12)
q9TS <- ts(q9_data$meanR, start = c(1980, 1), end = c(2020, 9), frequency = 12)
q9Decomp <- decompose(q9TS)
plot(q9Decomp)
arimaModel <- auto.arima(q9TS)
arimaFcst <- forecast(arimaModel, h = 12)
arimaFcst
q8TS <- ts(q8_data$meanT, start = c(1992, 3), end = c(2020, 9), frequency = 12)
q8Decomp <- decompose(q8TS)
plot(q8Decomp)
arimaModel <- auto.arima(q8TS)
arimaFcst <- forecast(arimaModel, h = 36)
arimaFcst
arimaFcst2 %>%
summarize(Fcst = mean(`Points Forecast`))
arimaModel2 <- auto.arima(q9TS)
arimaFcst2 <- forecast(arimaModel2, h = 12)
arimaFcst2
arimaFcst2 %>%
summarize(Fcst = mean(`Points Forecast`))
arimaFcst2 %>%
summarize(Fcst = mean(`Point Forecast`))
arimaFcst2 %>%
select(`Point Forecast`)
arima2_values <- c(0.2400961, 0.2247333, 0.2008597, 0.2244680, 0.2295683, 0.2552351, 0.3060520, 0.3220938, 0.3665838, 0.3393226)
mean(arima2_values)
plot(arimaFcst2)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0) %>%
select(DATE, RAIN) %>%
group_by(DATE) %>%
summarize(meanR = mean(RAIN)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanR = mean(meanR)) %>%
arrange(YEAR, MONTH)
q10_data
q10TS <- ts(q10_data$meanR, start = c(1980, 1), end = c(2020, 9), frequency = 12)
q9Decomp <- decompose(q10TS)
plot(q10Decomp)
q10TS <- ts(q10_data$meanR, start = c(1980, 1), end = c(2020, 9), frequency = 12)
q10Decomp <- decompose(q10TS)
plot(q10Decomp)
arimaModel3 <- auto.arima(q10TS)
arimaFcst3 <- forecast(arimaModel3, h = 12)
arimaFcst3
arima3_values <- c(0.2499647, 0.2277197, 0.2400634, 0.2365636, 0.2380559, 0.2346241, 0.2341519, 0.2503691, 0.2569528, 0.2930365, 0.2471260, 0.2510617)
mean(arima3_values)
arima2_values <- c(0.2400961, 0.2247333, 0.2008597, 0.2244680, 0.2295683, 0.2552351, 0.3060520, 0.3220938, 0.3665838, 0.3393226, 0.3596949, 0.2874200)
mean(arima2_values)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01") %>%
select(DATE, RAIN) %>%
group_by(DATE) %>%
summarize(meanR = mean(RAIN)) %>%
mutate(MONTH = month(DATE, label = TRUE),
YEAR = year(DATE)) %>%
group_by(MONTH, YEAR) %>%
summarize(meanR = mean(meanR)) %>%
arrange(YEAR, MONTH)
q10_data
q10TS <- ts(q10_data$meanR, start = c(1980, 1), end = c(2020, 9), frequency = 12)
q10Decomp <- decompose(q10TS)
plot(q10Decomp)
arimaModel3 <- auto.arima(q10TS)
arimaFcst3 <- forecast(arimaModel3, h = 12)
arimaFcst3
arima3_values <- c(0.2060215, 0.2232528, 0.2644520, 0.2806072, 0.3049370, 0.2963223, 0.2832161, 0.2610688, 0.2409487, 0.2227233, 0.2145385, 0.2146866)
mean(arima3_values)
plot(arimaFcst3)
q10TS <- ts(q10_data$meanR, start = c(1990, 1), end = c(2020, 9), frequency = 12)
q10Decomp <- decompose(q10TS)
plot(q10Decomp)
arimaModel3 <- auto.arima(q10TS)
arimaFcst3 <- forecast(arimaModel3, h = 12)
arimaFcst3
plot(arimaFcst3)
arima3_values <- c(0.2455325, 0.1921499, 0.1218215, 0.1548377, 0.1825692, 0.2116185, 0.2462977, 0.2834957, 0.2976616, 0.2972355, 0.2853007, 0.2655465)
mean(arima3_values)
plot(arimaFcst3, xlim(2015, 2021))
plot(arimaFcst3, xlim = c(2015, 2021))
plot(arimaFcst3, xlim = c(2010, 2021))
plot(arimaFcst2, xlim = c(2010, 2021))
plot(arimaFcst, xlim = c(2010, 2023))
ggplot(data_final, aes(x = RAIN, fill = COUNTY)) +
geom_boxplot()
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot()
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot() +
facet_gris(STATE)
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot() +
facet_grid(STATE)
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot()
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot(outlier.color = "red")
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8)
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8) +
labs(title = "Boxplot: Rain vs Temperature",
subtitle = "1980 - 2020",
x = "Rain (in)",
y = "Temperature (F)",
caption = "Source: NOAA")
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8) +
facet_wrap(~STATE) +
labs(title = "Boxplot: Rain vs Temperature",
subtitle = "1980 - 2020",
x = "Rain (in)",
y = "Temperature (F)",
caption = "Source: NOAA")
ggplot(data_final, aes(x = RAIN, y= TEMP_AVG, fill = COUNTY)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8) +
labs(title = "Boxplot: Rain vs Temperature",
subtitle = "1980 - 2020",
x = "Rain (in)",
y = "Temperature (F)",
caption = "Source: NOAA")
question2_mean_rain <-
data_final %>%
filter(between(year(DATE), 2010, 2020), !is.na(RAIN), RAIN > 0) %>%
select(COUNTY, RAIN) %>%
group_by(COUNTY) %>%
summarize(meanR = mean(RAIN),
sd_R = sd(RAIN)) %>%
arrange(desc(meanR))
question2_mean_rain
ggplot(question2_mean_rain, aes(x = COUNTY, y = sumR, fill = COUNTY)) +
geom_col() +
labs(title = "Avg Precipitation by County",
subtitle = "2010 - 2020",
x = "County",
y = "Rain (in)",
caption = "Source: NOAA")
ggplot(question2_mean_rain, aes(x = COUNTY, y = meanR, fill = COUNTY)) +
geom_col() +
labs(title = "Avg Precipitation by County",
subtitle = "2010 - 2020",
x = "County",
y = "Rain (in)",
caption = "Source: NOAA")
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01") %>%
select(DATE, RAIN)
q10_data
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01") %>%
select(DATE, RAIN) %>%
arrange(DATE)
q10_data
set.seed(123)
q10_sample <- sample.split(q10_data, SplitRatio = .75)
q10_train <- subset(q10_data, sample == TRUE)
set.seed(123)
q10_sample <- sample.split(q10_data$RAIN, SplitRatio = .75)
q10_train <- subset(q10_data, sample == TRUE)
set.seed(123)
q10_sample <- sample.split(q10_data$matches, SplitRatio = .75)
set.seed(123)
q10_sample <- sample.split(q10_data, SplitRatio = .75)
q10_train <- subset(q10_data, sample == TRUE)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(DATE, RAIN, TEMP_AVG) %>%
arrange(DATE)
q10_data
set.seed(123)
q10_sample <- sample.split(q10_data, SplitRatio = .75)
q10_train <- subset(q10_data, sample == TRUE)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(as.character(DATE), RAIN, TEMP_AVG) %>%
arrange(DATE)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(as.character(DATE), RAIN, TEMP_AVG)) %>%
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(as.character(DATE), RAIN, TEMP_AVG) %>%
arrange(DATE)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(as.character(DATE), RAIN, TEMP_AVG)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(as.character(data_final$DATE), RAIN, TEMP_AVG)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(DATE, RAIN, TEMP_AVG)
q10_data
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(as.factor(DATE), RAIN, TEMP_AVG)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
mutate(DATE = as.factor(DATE)) %>%
select(DATE, RAIN, TEMP_AVG)
q10_data
set.seed(123)
q10_sample <- sample.split(q10_data, SplitRatio = .75)
q10_train <- subset(q10_data, sample == TRUE)
q10_data <- data_final %>%
filter(STATE == "Wisconsin", !is.na(RAIN), RAIN > 0, DATE >= "1990-01-01", !is.na(TEMP_AVG)) %>%
select(DATE, RAIN, TEMP_AVG)
q10_data
set.seed(123)
q10_sample <- sample.split(q10_data, SplitRatio = .75)
q10_train <- subset(q10_data, q10_sample == TRUE)
q10_model <- loess(RAIN ~ TEMP_AVG, data = q10_train)
q10_model
set.seed(123)
q10_sample <- sample.split(q10_data, SplitRatio = .75)
q10_train <- subset(q10_data, q10_sample == TRUE)
q10_test <- subset(q10_data, q10_sample == FALSE)
q10_model <- loess(RAIN ~ TEMP_AVG, data = q10_train)
q10_model
predictedRain <- predict(q10_model, q10_test)
predictedRain <- predict(q10_model, q10_test)
predictedRain
q10Prediction <- data.frame(Temp = q10_test$TEMP_AVG,
ActualRain = q10_test$RAIN,
PredictedRain = predictedRain)
q10Prediction <- data.frame(Temp = q10_test$TEMP_AVG,
ActualRain = q10_test$RAIN,
PredictedRain = predictedRain)
q10Prediction
ggplot(q10Prediction, aes(x = Temp)) +
geom_point(aes(y = ActualRain), color = "blue") +
geom_point(aes(y = PredictedRain), color = "red")
ggplot(q10Prediction, aes(x = Temp)) +
geom_point(aes(y = ActualRain), color = "blue") +
geom_point(aes(y = PredictedRain), color = "red") +
labs(title = "Temperature vs Rain",
subtitle = "Actual (blue) vs. Predicted (Red)",
y = "Rain (in)",
x = "Temperature (F)",
caption = "Source: NOAA")
q10_mae <- MAE(q10Prediction$ActualRain, q10Prediction$PredictedRain)
cat("Mean Absolute Error:", q10_mae)
q10_mse <- MSE(q10Prediction$ActualRain, q10Prediction$PredictedRain)
q10_rmse <- RMSE(q10Prediction$ActualRain, q10Prediction$PredictedRain)
cat("Root Mean Squared Error:", q10_rmse)
q10_mse <- q10_rmse*q10_rmse
q10_mse
q10_mse <- q10_rmse*q10_rmse
cat("Mean Squared Error:", q10_mse)
q10_r2 <- R2(q10Prediction$ActualRain, q10Prediction$PredictedRain, form = "traditional")
cat("R2:", q10_r2)
q10Prediction <- data.frame(Temp = q10_test$TEMP_AVG,
ActualRain = q10_test$RAIN,
PredictedRain = predictedRain) %>%
filter(Temp == 70)
q10Prediction
q10Prediction <- data.frame(Temp = q10_test$TEMP_AVG,
ActualRain = q10_test$RAIN,
PredictedRain = predictedRain)
q10Prediction
q10Prediction %>%
filter(Temp == 70)
